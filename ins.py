


listy = '51095 -46875 -8120 28341 -94830 89248 -99302 -71545 -1090 47173 23663 94430 40263 20027 97630 -59928 84483 82483 -45274 79527 -42365 -56148 -76357 -846 75323 54489 -72730 93929 14996 -67579 54256 -14591 42651 10263 42066 -41716 13889 17063 18484 -4811 82165 5399 81129 -23367 -61008 -67270 82456 97910 48563 -82619 -49292 -16243 97072 40239 -12760 73116 -89329 75032 40929 -96402 2079 68651 38095 10007 60351 -29874 26258 40444 -53585 -15082 -73879 -98260 42472 -42899 -45095 48620 -76192 -57669 6767 -63650 -65384 22690 -24851 -32896 12910 76016 -67985 12485 -15206 93350 26547 77824 74123 -15146 40590 -13139 -95130 -45746 -16831 -97721 -90521 -51190 -5043 -66616 15670 -86800 5962 28239 5101 92139 15569 -3588 13366 -4019 -93048 -7762 -51519 -57392 -88372 41723 -34749 -20760 91129 13863 50397 78582 65434 -77578 51965 -54966 -75433 -71231 7155 -75252 -34824 -55963 43871 63038 60226 -12998 48447 -85208 -33450 -92055 35364 -75447 -95814 74895 -74284 -29776 69949 -41087 26357 14882 -97708 3665 -40572 -55400 -5634 42214 28652 40129 45514 11270 96939 37005 -44800 -7884 -54373 -20823 -26679 9099 59214 -819 7780 -68373 99171 92787 6734 -37415 -39976 53172 -4657 -74724 53780 -34801 2655 91990 -83026 91396 -82573 -21246 -3812 -2756 23902 49817 15849 -22976 30349 70862 -80179 81742 52093 -93537 12384 865 27093 -9575 -88445 20166 -57104 -24673 12659 -60326 49073 -54199 -18454 98608 2525 -35582 -42105 -83523 -90675 79820 -12686 6176 63384 10923 94519 -47581 -73627 -94600 33362 45908 69113 -30414 12166 85554 -41362 -77237 31139 -23647 94346 8419 -75069 40001 27029 8246 26010 99744 -76169 45747 -41554 95579 77789 -28654 -53284 60258 84346 -66707 -14936 22828 81489 -49288 -41139 19045 -77409 49670 -2115 -15941 3200 -88009 59930 78955 -94600 62663 62495 -53633 -98939 79307 59918 -91689 46058 -82294 83345 -96181 54220 -18323 21954 -46906 -2266 33539 -1110 28504 76409 12949 -75656 77925 -34467 -37929 2509 15610 36406 41509 -37069 -23345 49552 -75217 -98992 -61949 58814 22796 72949 -94710 60418 79643 2625 34265 -51523 78213 77597 -66340 3693 -50025 -47627 6012 -81185 30812 -64628 -20802 -8927 49756 48143 -79295 89693 -47849 -91569 -12575 68681 2170 -84491 -17188 66681 69501 20203 -30534 24732 -87800 62265 87237 4005 -21463 -1480 27656 -99248 -73782 -29752 -5641 53021 38550 -51769 -81524 31296 8484 -21526 -39917 -89005 97567 -79385 -18409 88564 -45379 -50258 -78927 -2768 -78011 12864 -11196 77086 -57034 46414 -98975 4030 -12459 42676 93270 -42596 73435 -15763 43543 86357 99321 46028 53925 80256 -27110 -51574 68606 -35521 -3088 39747 -22000 96457 -48915 -72775 77006 -43762 52703 17723 -49252 -46305 12810 -59962 99627 53189 -80657 -31393 58172 -66180 -3280 11578 83179 -18133 -8110 -74693 -20383 95350 -21023 -70731 -65608 -73884 31585 56602 42604 52139 -83021 73244 84852 -53272 29754 77914 85779 -34646 51302 92103 -64335 79704 -73375 -40067 -6244 90073 -65956 50720 -92778 8984 88258 -83619 -26412 87286 93995 -60446 71879 -52306 -72453 -86234 -86400 72938 -11834 72857 34124 85158 -12988 -75060 -86690 -27662 -80488 -62944 -67789 -59203 25152 -27263 91301 64803 -78657 66669 -40064 35437 -2441 13364 -21201 -96989 32611 72393 -91243 -55849 -83652 -815 50570 6430 -14697 -99509 -94259 55574 26548 -81109 -62576 21346 -45001 -6352 -91559 -68924 -19566 -13889 -92459 -36831 56132 93937 11109 -22189 13974 -86218 36759 8447 67313 17690 79850 72363 5133 -97782 -9900 9776 -6390 61170 41739 -1957 47964 31195 40236 73190 -46746 25995 37031 36358 -73013 71721 -72695 36304 42693 -11586 -57505 -68748 29357 -91784 93342 -99779 -84835 -99716 88615 11264 71215 -17783 -29190 -95229 -28390 36500 19991 -26980 4638 -71431 14352 -18715 62423 84387 -38644 11439 66326 15291 55752 -96636 -9614 -30220 91632 -85727 -72651 5998 -80211 54507 -31469 22691 71519 -2041 -2376 6451 56551 41816 13240 40849 83186 -13375 -6247 -72985 44174 44512 79595 -67826 -78813 -99651 89185 74767 -82501 -61959 -83652 33422 23147 17351 -20216 29011 -72617 2825 -52073 2265 61347 84869 -47648 13766 -27624 -7192 -37086 7611 -65942 48681 10337 31792 55643 -39569 -55034 99647 59177 75180 38284 -16626 28868 5984 85176 -33834 -50096 42021 48554 -15919 64557 44319 -44514 -24072 -74712 28908 6930 -10184 61258 -32258 82487 -2871 -37974 -59733 45872 42007 92122 -25104 -1569 -23030 -16787 -67177 -27440 69342 7862 -42599 41686 6162 -65895 -57218 -18403 24929 97683 -36375 -48153 42708 14113 93275 -13099 -75367 -23997 -34893 69393 -361 -74533 -21589 -26965 -40220 -46109 -70007 97698 -43870 77471 -46097 32993 93165 15653 48972 -91704 19433 88874 46182 -79246 33032 22181 -22146 28988 -27455 -53944 81276 -77885 -91215 1788 79019 2283 72252 42260 54751 -41137 83819 -69889 44407 43791 16121 -57385 59591 21988 -60529 20559 -31916 66882 63319 -62951 -50810 68276 86274 71094 30781 98898 74561 83694 40961 -82575 -28335 13695 44037 -44284 -21234 -31274 89193 37456 -325 74489 -41035 -35090 30898 -39057 -21276 -3009 -82132 17266 -97430 -50900 -57425 -43076 8778 -46711 17987 -99027 10264 -29858 -77158 -89322 77827 -93666 -99141 28925 -21781 50360 1368 83806 94519 -82921 -38432 -12099 -17015 -58612 23794 76727 -65237 -70861 55998 -30360 33363 -66085 35668'.split(' ')
listy = list(map(lambda x:int(x), listy))
print(listy)


def insertion_sort(array):
    count=0
    for i in range(1, len(array)):
        val = array[i]
        k = i

        while (k > 0) and (val < array[k-1]):
            array[k] = array[k-1]
            k -= 1
            count += 1

        array[k] = val

    return array, count

a,c = insertion_sort(listy)

print(a)
